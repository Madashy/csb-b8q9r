{"version":3,"sources":["TxList.js","App.js","index.js"],"names":["TxList","txs","length","map","item","className","from","to","amount","href","txHash","App","useState","setTxs","contractListened","setContractListened","address","tokenName","tokenSymbol","totalSupply","contractInfo","setContractInfo","balance","balanceInfo","setBalanceInfo","useEffect","provider","ethers","providers","Web3Provider","window","ethereum","erc20","Contract","erc20abi","on","event","console","log","currentTxs","transactionHash","String","removeAllListeners","handleSubmit","e","a","preventDefault","data","FormData","target","get","name","symbol","getMyBalance","send","getSigner","signer","getAddress","signerAddress","balanceOf","handleBurn","burn","handleMint","mint","handleTransfer","transfer","handleWithdraw","onSubmit","type","placeholder","deployedAt","onClick","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.a7b1f1a8.chunk.js","sourcesContent":["export default function TxList({ txs }) {\n  if (txs.length === 0) return null;\n  return (\n    <>\n      {txs.map((item) => (\n        <div key={item.txHash} className=\"alert-info mt-5 rounded-xl py-2 px-4\">\n          <div>\n            <p>From: {item.from}</p>\n            <p>To: {item.to}</p>\n            <p>Amount: {item.amount}</p>\n            <a href={`https://rinkeby.etherscan.io/tx/${item.txHash}`}>\n              Check in block explorer\n            </a>\n          </div>\n        </div>\n      ))}\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport erc20abi from \"./ERC20abi.json\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport TxList from \"./TxList\";\n\nexport default function App() {\n  const [txs, setTxs] = useState([]);\n  const [contractListened, setContractListened] = useState();\n  const [error, setError] = useState();\n  const [contractInfo, setContractInfo] = useState({\n    address: \"-\",\n    tokenName: \"-\",\n    tokenSymbol: \"-\",\n    totalSupply: \"-\"\n  });\n  const [balanceInfo, setBalanceInfo] = useState({\n    address: \"-\",\n    balance: \"-\"\n  });\n\n  useEffect(() => {\n    if (contractInfo.address !== \"-\") {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const erc20 = new ethers.Contract(\n        contractInfo.address,\n        erc20abi,\n        provider\n      );\n\n      erc20.on(\"Transfer\", (from, to, amount, event) => {\n        console.log({ from, to, amount, event });\n\n        setTxs((currentTxs) => [\n          ...currentTxs,\n          {\n            txHash: event.transactionHash,\n            from,\n            to,\n            amount: String(amount)\n          }\n        ]);\n      });\n      setContractListened(erc20);\n\n      return () => {\n        contractListened.removeAllListeners();\n      };\n    }\n  }, [contractInfo.address]);\n\n  // Gets the contract address\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n    const erc20 = new ethers.Contract(data.get(\"addr\"), erc20abi, provider);\n\n    const tokenName = await erc20.name();\n    const tokenSymbol = await erc20.symbol();\n    const totalSupply = await erc20.totalSupply();\n\n    setContractInfo({\n      address: data.get(\"addr\"),\n      tokenName,\n      tokenSymbol,\n      totalSupply\n    });\n  };\n  // Gets the your balance\n  const getMyBalance = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const erc20 = new ethers.Contract(contractInfo.address, erc20abi, provider);\n    const signer = await provider.getSigner();\n    const signerAddress = await signer.getAddress();\n    const balance = await erc20.balanceOf(signerAddress);\n\n    setBalanceInfo({\n      address: signerAddress,\n      balance: String(balance)\n    });\n  };\n  // Allows the owner of the contract to burn a amount of tokens\n  const handleBurn = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n    const erc20 = new ethers.Contract(contractInfo.address, erc20abi, signer);\n    await erc20.burn(data.get(\"amount\"));\n  };\n  // Allows the owner of the contract to mint a amount of tokens\n  const handleMint = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n    const erc20 = new ethers.Contract(contractInfo.address, erc20abi, signer);\n    await erc20.mint(data.get(\"amount\"));\n  };\n\n  // Allows transfer\n  const handleTransfer = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n    const erc20 = new ethers.Contract(contractInfo.address, erc20abi, signer);\n    await erc20.transfer(contractInfo.address, data.get(\"amount\"));\n  };\n  // Allows withdraw\n  const handleWithdraw = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n    const erc20 = new ethers.Contract(contractInfo.address, erc20abi, signer);\n    await erc20.transfer(signer.getAddress(), data.get(\"amount\"));\n  };\n\n  return (\n    <div className=\"grid grid-cols-1 gap-2 md:grid-cols-2\">\n      <div>\n        <form className=\"m-4\" onSubmit={handleSubmit}>\n          <div className=\"credit-card w-full lg:w-3/4 sm:w-auto shadow-lg mx-auto rounded-xl bg-white\">\n            <main className=\"mt-4 p-4\">\n              <h1 className=\"text-xl font-semibold text-gray-700 text-center\">\n                Read from smart contract\n              </h1>\n              <div className=\"\">\n                <div className=\"my-3\">\n                  <input\n                    type=\"text\"\n                    name=\"addr\"\n                    className=\"input input-bordered block w-full focus:ring focus:outline-none\"\n                    placeholder=\"ERC20 contract address\"\n                  />\n                </div>\n              </div>\n            </main>\n            <footer className=\"p-4\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary submit-button focus:ring focus:outline-none w-full\"\n              >\n                Get token info\n              </button>\n            </footer>\n            <div className=\"px-4\">\n              <div className=\"overflow-x-auto\">\n                <table className=\"table w-full\">\n                  <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th>Symbol</th>\n                      <th>Total supply</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th>{contractInfo.tokenName}</th>\n                      <td>{contractInfo.tokenSymbol}</td>\n                      <td>{String(contractInfo.totalSupply)}</td>\n                      <td>{contractInfo.deployedAt}</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n            <div className=\"p-4\">\n              <button\n                onClick={getMyBalance}\n                type=\"submit\"\n                className=\"btn btn-primary submit-button focus:ring focus:outline-none w-full\"\n              >\n                Get my balance\n              </button>\n            </div>\n            <div className=\"px-4\">\n              <div className=\"overflow-x-auto\">\n                <table className=\"table w-full\">\n                  <thead>\n                    <tr>\n                      <th>Address</th>\n                      <th>Balance</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th>{balanceInfo.address}</th>\n                      <td>{balanceInfo.balance}</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </form>\n        <div className=\"m-4 credit-card w-full lg:w-3/4 sm:w-auto shadow-lg mx-auto rounded-xl bg-white\">\n          <div className=\"mt-4 p-4\">\n            <h1 className=\"text-xl font-semibold text-gray-700 text-center\">\n              Interact with the contract\n            </h1>\n            <form onSubmit={handleMint}>\n              <div className=\"my-3\">\n                <input\n                  type=\"text\"\n                  name=\"amount\"\n                  className=\"input input-bordered block w-full focus:ring focus:outline-none\"\n                  placeholder=\"Amount to mint\"\n                />\n              </div>\n              <footer className=\"p-4\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary submit-button focus:ring focus:outline-none w-full\"\n                >\n                  Mint\n                </button>\n              </footer>\n            </form>\n            <form onSubmit={handleBurn}>\n              <div className=\"my-3\">\n                <input\n                  type=\"text\"\n                  name=\"amount\"\n                  className=\"input input-bordered block w-full focus:ring focus:outline-none\"\n                  placeholder=\"Amount to Burn\"\n                />\n              </div>\n              <footer className=\"p-4\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary submit-button focus:ring focus:outline-none w-full\"\n                >\n                  Burn\n                </button>\n              </footer>\n            </form>\n            <h1 className=\"text-xl font-semibold text-gray-700 text-center\">\n              Write to contract\n            </h1>\n\n            <form onSubmit={handleTransfer}>\n              <div className=\"my-3\">\n                <input\n                  type=\"text\"\n                  name=\"recipient\"\n                  className=\"input input-bordered block w-full focus:ring focus:outline-none\"\n                  placeholder=\"Recipient address\"\n                />\n              </div>\n              <div className=\"my-3\">\n                <input\n                  type=\"text\"\n                  name=\"amount\"\n                  className=\"input input-bordered block w-full focus:ring focus:outline-none\"\n                  placeholder=\"Amount to transfer\"\n                />\n              </div>\n              <footer className=\"p-4\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary submit-button focus:ring focus:outline-none w-full\"\n                >\n                  Transfer\n                </button>\n              </footer>\n            </form>\n            <h1 className=\"text-xl font-semibold text-gray-700 text-center\">\n              Withdraw from contract\n            </h1>\n            <form onSubmit={handleWithdraw}>\n              <div className=\"my-3\">\n                <input\n                  type=\"text\"\n                  name=\"amount\"\n                  className=\"input input-bordered block w-full focus:ring focus:outline-none\"\n                  placeholder=\"Amount to withdraw\"\n                />\n              </div>\n              <footer className=\"p-4\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary submit-button focus:ring focus:outline-none w-full\"\n                >\n                  Withdraw\n                </button>\n              </footer>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div>\n        <div className=\"m-4 credit-card w-full lg:w-3/4 sm:w-auto shadow-lg mx-auto rounded-xl bg-white\">\n          <div className=\"mt-4 p-4\">\n            <h1 className=\"text-xl font-semibold text-gray-700 text-center\">\n              Recent transactions\n            </h1>\n            <p>\n              <TxList txs={txs} />\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}